{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appClientId": {
      "type": "string",
      "defaultValue": "00000000-0000-0000-0000-000000000000",
      "metadata": {
        "description": "App registration client id."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "00000000-0000-0000-0000-000000000000",
      "metadata": {
        "description": "Tenant ID."
      }
    },
    "projectName": {
      "type": "string",
      "minLength": 2,
      "defaultValue": "venezia"
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "defaultValue": "dev"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "appServiceAlwaysOn": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "AlwaysOn on website"
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "PYTHON|3.8",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_RAGRS",
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account Type"
      }
    },
    "dbAdministratorLogin": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "pgsqladmin",
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "dbAdministratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "maxLength": 128,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "databaseSkuCapacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        4,
        8,
        16,
        32
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "Azure database for PostgreSQL vCores capacity"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "allowedValues": [
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_8",
        "GP_Gen5_16",
        "GP_Gen5_32",
        "MO_Gen5_2",
        "MO_Gen5_4",
        "MO_Gen5_8",
        "MO_Gen5_16",
        "B_Gen5_1",
        "B_Gen5_2"
      ],
      "defaultValue": "B_Gen5_1",
      "metadata": {
        "description": "Azure database for PostgreSQL sku name"
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "allowedValues": [
        102400,
        51200
      ],
      "defaultValue": 51200,
      "metadata": {
        "description": "Azure database for PostgreSQL Sku Size"
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "allowedValues": [
        "GeneralPurpose",
        "MemoryOptimized",
        "Basic"
      ],
      "defaultValue": "Basic",
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "postgresqlVersion": {
      "type": "string",
      "allowedValues": [
        "9.5",
        "9.6"
      ],
      "defaultValue": "9.6",
      "metadata": {
        "description": "PostgreSQL version"
      }
    }
  },
  "variables": {
    "projectName": "[concat(parameters('environment'), '-', parameters('projectName'))]",
    "appServicePlanName": "[concat(parameters('environment'), '-app-service-', parameters('projectName'))]",
    "storageAccountName": "[replace(concat(variables('projectName'),'stacc'), '-', '')]",
    "appInsName": "[concat(variables('projectName'),'-appins')]",
    "databaseName": "torino",
    "serverName": "[concat(variables('projectName'), 'pg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "westeurope",
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "DELETE",
                "GET",
                "POST",
                "MERGE",
                "PUT",
                "OPTIONS",
                "HEAD",
                "PATCH"
              ],
              "maxAgeInSeconds": 300,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            }
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/$web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "name": "[variables('appInsName')]",
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "applicationType": "web",
        "displayName": "AppInsightsComponentGlobal"
      },
      "properties": {
        "ApplicationId": "[variables('projectName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('projectName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "alwaysOn": "[parameters('appServiceAlwaysOn')]"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('projectName'))]"
          ],
          "properties": {
            "PostgreSQLConnectionString": {
              "value": "[concat('Database=', variables('databaseName'), ';Server=', reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName'))).fullyQualifiedDomainName, ';User Id=',parameters('dbAdministratorLogin'),'@',variables('serverName') ,';Password=',parameters('dbAdministratorLoginPassword'))]",
              "type": "PostgreSQL"
            },
            "CloudStorageConnectionString": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'), '2015-05-01-preview').key1)]",
              "type": "Custom"
            }
          }
        },
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('projectName'))]"
          ],
          "properties": {
            "SCM_DO_BUILD_DURING_DEPLOYMENT": "true",
            "auth__client_id": "[parameters('appClientId')]",
            "auth__tenant_id": "[parameters('tenantId')]",
            "storage_account_name": "[variables('storageAccountName')]",
            "storage_account_key": "[listKeys(variables('storageAccountName'), '2015-05-01-preview').key1]",
            "monitoring_key": "[reference(concat('Microsoft.Insights/components/', variables('appInsName'))).InstrumentationKey]",
            "postgres_db": "[variables('databaseName')]",
            "postgres_user": "[concat(parameters('dbAdministratorLogin'),'@',variables('serverName'))]",
            "postgres_password": "[parameters('dbAdministratorLoginPassword')]",
            "postgres_host": "[reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('serverName'))).fullyQualifiedDomainName]"
          }
        }
      ]
    },
    {
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "name": "[variables('serverName')]",
      "properties": {
        "createMode": "Default",
        "version": "[parameters('postgresqlVersion')]",
        "administratorLogin": "[parameters('dbAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('dbAdministratorLoginPassword')]",
        "storageMB": "[parameters('databaseSkuSizeMB')]"
      },
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkuCapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "Gen5"
      },
      "type": "Microsoft.DBforPostgreSQL/servers",
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2017-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
          ],
          "location": "[parameters('location')]",
          "name": "[concat(variables('serverName'),'firewall')]",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        },
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "utf8",
            "collation": "English_United States.1252"
          },
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('serverName'))]"
          ]
        }
      ]
    }
  ]
}
